{"version":3,"file":"module.js","mappings":"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","sources":["webpack://autohome-comparequeries-datasource/external amd \"@grafana/data\"","webpack://autohome-comparequeries-datasource/external amd \"app/plugins/sdk\"","webpack://autohome-comparequeries-datasource/external amd \"lodash\"","webpack://autohome-comparequeries-datasource/external amd \"moment\"","webpack://autohome-comparequeries-datasource/webpack/bootstrap","webpack://autohome-comparequeries-datasource/webpack/runtime/compat get default export","webpack://autohome-comparequeries-datasource/webpack/runtime/define property getters","webpack://autohome-comparequeries-datasource/webpack/runtime/hasOwnProperty shorthand","webpack://autohome-comparequeries-datasource/webpack/runtime/make namespace object","webpack://autohome-comparequeries-datasource/./datasource.ts","webpack://autohome-comparequeries-datasource/./query_ctrl.ts","webpack://autohome-comparequeries-datasource/./config_ctrl.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__347__;","module.exports = __WEBPACK_EXTERNAL_MODULE__241__;","module.exports = __WEBPACK_EXTERNAL_MODULE__468__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import _ from 'lodash';\nimport moment from 'moment'; // eslint-disable-line no-restricted-imports\n\nimport { ArrayVector, MutableField } from '@grafana/data';\n\nexport class CompareQueriesDatasource {\n  datasourceSrv: any;\n  $q: any;\n  templateSrv: any;\n  meta: any;\n  units = ['y', 'M', 'w', 'd', 'h', 'm', 's'];\n\n  /** @ngInject */\n  constructor($q, datasourceSrv, templateSrv) {\n    this.datasourceSrv = datasourceSrv;\n    this.$q = $q;\n    this.templateSrv = templateSrv;\n  }\n\n  testDatasource() {\n    return new Promise(function(resolve, reject) {\n      resolve({\n        status: 'success',\n        message: 'Compare Query Source is working correctly',\n        title: 'Success',\n      });\n    });\n  }\n\n  // Called once per panel (graph)\n  query(options) {\n    var _this = this;\n    var sets = _.groupBy(options.targets, function(ds) {\n      // Trying to maintain compatibility with grafana lower then 8.3.x\n      if (ds.datasource.uid === undefined) {\n        return ds.datasource;\n      }\n      return ds.datasource.uid;\n    });\n    var querys = _.groupBy(options.targets, 'refId');\n    var promises: any[] = [];\n    _.forEach(sets, function(targets, dsName) {\n      var opt = _.cloneDeep(options);\n\n      var promise = _this.datasourceSrv.get(dsName).then(function(ds) {\n        if (ds.meta.id === _this.meta.id) {\n          return _this._compareQuery(options, targets, querys, _this);\n        } else {\n          opt.targets = targets;\n          let result = ds.query(opt);\n          return typeof result.toPromise === 'function' ? result.toPromise() : result;\n        }\n      });\n      promises.push(promise);\n    });\n    let result = this.$q.all(promises).then(function(results) {\n      return {\n        data: _.flatten(\n          _.filter(\n            _.map(results, function(result) {\n              var data = result.data;\n              if (data) {\n                data = _.filter(result.data, function(datum) {\n                  return datum.hide !== true;\n                });\n              }\n              return data;\n            }),\n            function(result) {\n              return result !== undefined && result !== null;\n            }\n          )\n        ),\n      };\n    });\n    return result;\n  }\n\n  _compareQuery(options, targets, querys, _this) {\n    var comparePromises: any[] = [];\n    //console.log('_compareQuery targets', targets)\n    _.forEach(targets, function(target) {\n      var query = target.query;\n      if (query === null || query === '' || querys[query] === null) {\n        return;\n      }\n      var queryObj = _.cloneDeep(querys[query][0]);\n      queryObj.hide = false;\n      if (queryObj) {\n        var compareDsName = queryObj.datasource;\n        if (target.timeShifts && target.timeShifts.length > 0) {\n          _.forEach(target.timeShifts, function(timeShift) {\n            var timeShiftValue;\n            var timeShiftAlias;\n            var aliasType = timeShift.aliasType || 'suffix';\n            var delimiter = timeShift.delimiter || '_';\n\n            var comparePromise = _this.datasourceSrv\n              .get(compareDsName)\n              .then(function(compareDs) {\n                if (compareDs.meta.id === _this.meta.id) {\n                  return { data: [] };\n                }\n                timeShiftValue = _this.templateSrv.replace(timeShift.value, options.scopedVars);\n                timeShiftAlias = _this.templateSrv.replace(timeShift.alias, options.scopedVars) || timeShiftValue;\n\n                if (timeShiftValue === null || timeShiftValue === '' || typeof timeShiftValue === 'undefined') {\n                  return { data: [] };\n                }\n                let compareOptions = _.cloneDeep(options);\n                compareOptions.range.from = _this.addTimeShift(compareOptions.range.from, timeShiftValue);\n                compareOptions.range.to = _this.addTimeShift(compareOptions.range.to, timeShiftValue);\n                compareOptions.range.raw = {\n                  from: compareOptions.range.from,\n                  to: compareOptions.range.to,\n                };\n                compareOptions.rangeRaw = compareOptions.range.raw;\n\n                queryObj.refId = queryObj.refId + '_' + timeShiftValue;\n                compareOptions.targets = [queryObj];\n                compareOptions.requestId = compareOptions.requestId + '_' + timeShiftValue;\n\n                var compareResult = compareDs.query(compareOptions);\n                return typeof compareResult.toPromise === 'function' ? compareResult.toPromise() : compareResult;\n              })\n              .then(function(compareResult) {\n                var data = compareResult.data;\n                data.forEach(function(line) {\n                  if (line.target) {\n                    // if old time series format\n                    line.target = _this.generalAlias(line.target, timeShiftAlias, aliasType, delimiter);\n                    typeof line.title !== 'undefined' &&\n                      line.title !== null &&\n                      (line.title = _this.generalAlias(line.title, timeShiftAlias, aliasType, delimiter));\n                  } else if (line.fields) {\n                    //else if new data frames format with multiple series\n                    line.fields.forEach(function(field) {\n                      if (field.name) {\n                        field.name = _this.generalAlias(field.name, timeShiftAlias, aliasType, delimiter);\n                      }\n\n                      if (field.config && field.config.displayName) {\n                        field.config.displayName = _this.generalAlias(\n                          field.config.displayName,\n                          timeShiftAlias,\n                          aliasType,\n                          delimiter\n                        );\n                      }\n\n                      if (field.config && field.config.displayNameFromDS) {\n                        field.config.displayNameFromDS = _this.generalAlias(\n                          field.config.displayNameFromDS,\n                          timeShiftAlias,\n                          aliasType,\n                          delimiter\n                        );\n                      }\n                    });\n                  } else if (line.columns) {\n                    // else if table. always skip first column for joins\n                    for (let i = 1; i < line.columns.length; i++) {\n                      let column = line.columns[i];\n                      if (column.text) {\n                        column.text = _this.generalAlias(column.text, timeShiftAlias, aliasType, delimiter);\n                      }\n                    }\n                  }\n\n                  if (target.process) {\n                    let timeShift_ms = _this.parseShiftToMs(timeShiftValue);\n\n                    if (line.type === 'table') {\n                      if (line.rows) {\n                        line.rows.forEach(function(row) {\n                          row[0] = row[0] + timeShift_ms;\n                        });\n                      }\n                    } else {\n                      if (line.datapoints) {\n                        // if old time series format\n                        line.datapoints.forEach(function(datapoint) {\n                          datapoint[1] = datapoint[1] + timeShift_ms;\n                        });\n                      } else if (line.fields && line.fields.length > 0) {\n                        //else if new data frames format\n                        const unshiftedTimeField = line.fields.find(field => field.type === 'time');\n\n                        if (unshiftedTimeField) {\n                          const timeField: MutableField = {\n                            name: unshiftedTimeField.name,\n                            type: unshiftedTimeField.type,\n                            config: unshiftedTimeField.config || {},\n                            labels: unshiftedTimeField.labels,\n                            values: new ArrayVector(),\n                          };\n\n                          for (let i = 0; i < line.length; i++) {\n                            timeField.values.set(i, unshiftedTimeField.values.get(i) + timeShift_ms);\n                          }\n                          line.fields[0] = timeField;\n                        }\n                      }\n                    }\n                  }\n\n                  line.hide = target.hide;\n                });\n                return {\n                  data: data,\n                };\n              });\n\n            comparePromises.push(comparePromise);\n          });\n        }\n      }\n    });\n\n    return this.$q.all(comparePromises).then(function(results) {\n      return {\n        data: _.flatten(\n          _.filter(\n            _.map(results, function(result) {\n              var data = result.data;\n              if (data) {\n                data = _.filter(result.data, function(datum) {\n                  return datum.hide !== true;\n                });\n              }\n              return data;\n            }),\n            function(result) {\n              return result !== undefined && result !== null;\n            }\n          )\n        ),\n      };\n    });\n  }\n\n  generalAlias(original, alias, aliasType, delimiter) {\n    switch (aliasType) {\n      case 'prefix':\n        return alias + delimiter + original;\n      case 'absolute':\n        return alias;\n      case 'suffix':\n      default:\n        return original + delimiter + alias;\n    }\n  }\n\n  parseShiftToMs(timeShift) {\n    let timeShiftObj = this.parseTimeShift(timeShift);\n    if (!timeShiftObj) {\n      return;\n    }\n    var num = 0 - timeShiftObj.num;\n    var unit = timeShiftObj.unit;\n    if (!_.includes(this.units, unit)) {\n      return undefined;\n    } else {\n      let curTime = moment();\n      let shiftTime = curTime.clone().add(num, unit);\n      return curTime.valueOf() - shiftTime.valueOf();\n    }\n  }\n  parseTimeShift(timeShift) {\n    var dateTime = timeShift;\n    var len = timeShift.length;\n    var i = 0;\n\n    while (i < len && !isNaN(dateTime.charAt(i))) {\n      i++;\n      if (i > 10) {\n        return undefined;\n      }\n    }\n    var num = parseInt(dateTime.substring(0, i), 10);\n    var unit = dateTime.charAt(i);\n    return {\n      num: num,\n      unit: unit,\n    };\n  }\n\n  addTimeShift(time, timeShift) {\n    let timeShiftObj = this.parseTimeShift(timeShift);\n    if (!timeShiftObj) {\n      return;\n    }\n    var num = 0 - timeShiftObj.num;\n    var unit = timeShiftObj.unit;\n\n    if (!_.includes(this.units, unit)) {\n      return undefined;\n    } else {\n      let curTime = time;\n      let shiftTime = curTime.clone().add(num, unit);\n      return shiftTime;\n    }\n  }\n}\n","import _ from 'lodash';\n// import kbn from 'app/core/utils/kbn';\nimport { QueryCtrl } from 'grafana/app/plugins/sdk';\n\nexport class CompareQueriesQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n  errors: any;\n  query: any;\n  target: any;\n  aliasTypes = ['suffix', 'prefix', 'absolute'];\n  /** @ngInject **/\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    if (!this.target.timeShifts) {\n      this.target.timeShifts = [];\n    }\n    if (this.target.timeShifts.length === 0) {\n      this.addTimeShifts();\n    }\n    if (typeof this.target.process === 'undefined') {\n      this.target.process = true;\n    }\n  }\n\n  targetBlur() {\n    this.refresh();\n  }\n  onChangeInternal() {\n    this.refresh(); // Asks the panel to refresh data.\n  }\n  addTimeShifts() {\n    let id = this.getTimeShiftId();\n    this.target.timeShifts.push({ id: id });\n  }\n  removeTimeShift(timeShift) {\n    if (this.target.timeShifts && this.target.timeShifts.length <= 1) {\n      return;\n    }\n    var index = _.indexOf(this.target.timeShifts, timeShift);\n    this.target.timeShifts.splice(index, 1);\n    this.refreshTimeShifts();\n  }\n  refreshTimeShifts() {\n    this.refresh();\n  }\n  onAliasAsChange(aliasAs) {\n    console.error('timeShift.aliasAs=' + this.target.aliasAs);\n    console.error('aliasAs=' + aliasAs);\n  }\n  getTimeShiftId() {\n    let id = 0;\n    while (true) {\n      let notExits = _.every(this.target.timeShifts, function(timeShift) {\n        return timeShift.id !== id;\n      });\n      if (notExits) {\n        return id;\n      } else {\n        id++;\n      }\n    }\n  }\n}\n","import _ from 'lodash';\n\nexport class CompareQueriesConfigCtrl {\n  static templateUrl = 'partials/config.html';\n  current: any;\n}\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__347__","__WEBPACK_EXTERNAL_MODULE__241__","__WEBPACK_EXTERNAL_MODULE__468__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","CompareQueriesDatasource","testDatasource","Promise","resolve","reject","status","message","title","query","options","_this","this","sets","_","targets","ds","datasource","uid","querys","promises","dsName","opt","promise","datasourceSrv","then","meta","id","_compareQuery","result","toPromise","push","$q","all","results","data","datum","hide","comparePromises","target","queryObj","compareDsName","timeShifts","length","timeShift","timeShiftValue","timeShiftAlias","aliasType","delimiter","comparePromise","compareDs","templateSrv","replace","scopedVars","alias","compareOptions","range","from","addTimeShift","to","raw","rangeRaw","refId","requestId","compareResult","forEach","line","generalAlias","fields","field","name","config","displayName","displayNameFromDS","columns","i","column","text","process","timeShift_ms","parseShiftToMs","type","rows","row","datapoints","datapoint","unshiftedTimeField","find","timeField","labels","values","ArrayVector","set","original","timeShiftObj","parseTimeShift","num","unit","units","curTime","moment","shiftTime","clone","add","valueOf","dateTime","len","isNaN","charAt","parseInt","substring","time","constructor","CompareQueriesQueryCtrl","QueryCtrl","targetBlur","refresh","onChangeInternal","addTimeShifts","getTimeShiftId","removeTimeShift","index","splice","refreshTimeShifts","onAliasAsChange","aliasAs","console","error","$scope","$injector","super","errors","aliasTypes","templateUrl","CompareQueriesConfigCtrl","current"],"sourceRoot":""}